Отличительной особенностью проект написанных на Java является время жизни таких проектов. Обычно проекты очень больший и живут они долго.
Самый главной задачей программиста в таких проектах - это писать понятный и просто поддерживаемый код.
В этой задаче описаны основные ошибки, которые усложняют чтение кода и его восприятие.

1. Избыточные имена переменных. 
Часто можно видеть в коде переменные названные по имени класса.
Помните класс - это безликий шаблон. он не отображает смысл вашего объекта. Можно сравнить с домашним питомцем. Никто не дает щенку кличку собака. Мы даем кличку по характеру щенка - Например: Искорка. 
Тоже самое происходит и с переменными.
SimpleList simpleList - плохо. не отображает смысл для чего нужна эта переменная.
Так же, иногда бывает сложно придумать простое название поэтому мы начинаем делать составное имя.
Например SimpleList userBankAccount - это тоже плохое название. Оно информативное, но комбинация таких переменных будет усложнять восприятие такого кода.
Например userBankAccount.get(accountFromDabaBase) - сложно читать.
Общее правильно для название переменных.
Переменная должна быть названа существительным и состоять только из одно слова. Например user, users, input, output, console, persons, validate.

2. Комментарии в теле метода.
Когда мы пишем код для большей ясности мы можем добавлять комментарии в коде. С одной стороны это удобно. Но давайте разберемся.
Представьте вы учите иностранный язык. У вас задача перевести тест. Вы чтобы облегчить себе задачу начинаете надписывать незнакомые слова.
Теперь текст можно просто прочитать на родном языке. Для Вас это удобно. Но будет ли удобно это для человека, который хорошо знает этот иностранный язык. Для этого такой текст будет выглядеть путаницей. 
Общее правило - мы не пишем комментарии в коде. Для объяснения кода мы используем JavaDoc. Там можно писать сочинения о том. как работаешь ваш код.

3. Пустые строки в теле метода.
Другая ошибка в коде, когда мы пытаемся код разбить на группы. Для этого мы начинаем создавать пустые строки между группами.
Если Вы делаете пустые строки. то правильнее сделать два метода. А не делать пустые строки. 
Помните пустая строка - сигнал создать новый метод.
Общее правильно - в теле метода не должны быть пустых строк. Нигде.

4. Имена классов с префиксом My.
Этот пункт обратная сторона первого пункта. Я - это я. а вы это вы. Этот префикс не характеризует класс. Он говорит только о том, что программист не хотел тратить время на код. а хотел быстрее сделать задачу.
Помните. что написать код и его поддерживать. Это разные вещи. 
Вспомните, как в детстве мы строили куличики. Чем больше была крепость тем сложнее было ее достраивать. тут тоже самое.
Чем больше проект. тем качественнее надо писать код.
Пишите сразу код качественно. Экономьте свое время на поддержании кода, а не на создании. Он в разы будет больше.